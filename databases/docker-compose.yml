version: "3.7"

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql-dev
    restart: on-failure
    ports:
      - ${MYSQL_PORT_LOCAL}:${MYSQL_PORT_DEFAULT}
    environment:
      MYSQL_ROOT_PASSWORD: ${MY_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MY_MYSQL_USER}
      MYSQL_PASSWORD: ${MY_MYSQL_USER_PASSWORD}
      MYSQL_DATABASE: ${MY_MYSQL_DB}
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/log:/var/lib/log
    networks:
      - db

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres-dev
    restart: on-failure
    ports:
      - ${POSTGRES_PORT_LOCAL}:${POSTGRES_PORT_DEFAULT}
    environment:
      POSTGRES_ROOT_PASSWORD: ${MY_POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${MY_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MY_POSTGRES_USER_PASSWORD}
      POSTGRES_DB: ${MY_POSTGRES_DB}
    volumes:
      - ./postgres/db:/var/lib/postgresql/data
      - ./postgres/log:/var/lib/postgresql/log
    networks:
      - db

  firebird:
    image: kpsys/firebird
    container_name: firebird-dev
    restart: on-failure
    ports:
      - ${FIREBIRD_PORT_LOCAL}:${FIREBIRD_PORT_DEFAULT}
    volumes:
      - ./firebird/db:/usr/local/firebird/data
    networks:
      - db

  mongo:
    image: mongo:${MONGO_VERSION}
    container_name: mongo-dev
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MY_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MY_MONGO_USER_PASSWORD}
    ports:
      - ${MONGO_PORT_LOCAL}:${MONGO_PORT_DEFAULT}
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
    networks:
      - db

  redis:
    image: redis/redis-stack-server:${REDIS_VERSION}
    container_name: redis-dev
    restart: on-failure
    environment:
      REDIS_ARGS: "--requirepass ${MY_REDIS_USER_PASSWORD}"
    ports:
      - ${REDIS_PORT_LOCAL}:${REDIS_PORT_DEFAULT}
    volumes:
      - ./redis/db:/data
      - ./redis/redis-stack.conf:/opt/redis-stack/redis-stack.conf
    networks:
      - db

  rethinkdb:
    image: rethinkdb:${RETHINKDB_VERSION}
    container_name: rethinkdb-dev
    restart: on-failure
    ports:
      - ${RETHINKDB_PORT_LOCAL}:${RETHINKDB_PORT_DEFAULT}
      - ${RETHINKDB_PORT_CLIENT_LOCAL}:${RETHINKDB_PORT_CLIENT_DEFAULT}
      - ${RETHINKDB_PORT_INTRACLUSTER_LOCAL}:${RETHINKDB_PORT_INTRACLUSTER_DEFAULT}
    command:
      - /bin/bash
      - -c
      - |
        rethinkdb create --initial-password ${MY_RETHINKDB_USER_PASSWORD}
        rethinkdb --bind all
    volumes:
      - ./rethinkdb/db:/data
    networks:
      - db

networks:
  db:
    name: database-network
